apply plugin: 'com.android.library'

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    defaultConfig {
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode rootProject.ext.versionCode
        versionName rootProject.ext.versionName
    }

    buildTypes {
        debug {
            minifyEnabled false
            zipAlignEnabled false
        }

        beta {
            minifyEnabled false
            zipAlignEnabled false
        }

        release {
            //混淆
            minifyEnabled true
            //Zipalign优化
            zipAlignEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    lintOptions {
        abortOnError false
    }
}
task clearJar(type: Delete) {
    delete 'libs/framework.jar' //sdk是你自己jar包的名字，随便命名
}
task makeJar(type:org.gradle.api.tasks.bundling.Jar) {
//指定生成的jar名
    baseName 'framework'
    //从哪里打包class文件
    from('build/intermediates/classes/debug/org/cmdmac/cloud/pluginsdk/')
    //打包到jar后的目录结构
    into('org/cmdmac/cloud/pluginsdk/')
    //去掉不需要打包的目录和文件
    exclude('test/', 'BuildConfig.class', 'R.class')//去掉R开头的文件
    exclude{ it.name.startsWith('R')}
}
makeJar.dependsOn(clearJar, build)
dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    api project(':ui')
    api 'io.reactivex.rxjava2:rxjava:2.1.9'
    api 'io.reactivex.rxjava2:rxandroid:2.0.2'
    api 'com.squareup.okhttp3:okhttp:3.10.0'
    api 'com.squareup.okhttp3:logging-interceptor:3.9.0'
    api 'com.google.code.gson:gson:2.8.2'
    api 'org.greenrobot:eventbus:3.1.1'
    api 'com.github.bumptech.glide:glide:4.7.1'
    implementation 'com.github.whataa:pandora:v1.0.4'

    implementation "org.eclipse.paho:org.eclipse.paho.client.mqttv3:${rootProject.ext.clientVersion}"
    implementation 'org.eclipse.paho:org.eclipse.paho.android.service:1.1.1'
}
